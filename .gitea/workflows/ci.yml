name: FunPot Core CI

on:
  push:
    branches: ["main", "dev", "feature/**"]
  pull_request:
    branches: ["main", "dev"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: docker.gitea.com/runner-images:ubuntu-latest
    env:
      PORT: "8080"
      FUNPOT_ENV: "ci"
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: true

      - name: Ensure secret present (no reveal)
        run: |
          if [ -z "${TELEGRAM_BOT_TOKEN:-}" ]; then
            echo "ERROR: TELEGRAM_BOT_TOKEN secret is missing (fork PRs не получают секреты)." >&2
            exit 1
          fi

      - name: Validate formatting
        run: |
          fmt_out=$(gofmt -l .)
          if [ -n "$fmt_out" ]; then
            echo "The following files need gofmt:" >&2
            echo "$fmt_out" >&2
            exit 1
          fi

      - name: Verify modules
        run: go mod tidy && git diff --exit-code -- go.mod go.sum

      - name: Run go vet
        run: go vet ./...

      - name: Run tests
        run: go test ./...

      - name: Build Docker image
        run: docker build -t funpot-core:ci .

      - name: Smoke test container
        run: |
          set -euo pipefail
          cid=$(docker run -d \
            -e TELEGRAM_BOT_TOKEN="$TELEGRAM_BOT_TOKEN" \
            -e FUNPOT_ENV="$FUNPOT_ENV" \
            -e PORT="$PORT" \
            --name funpot-ci-test \
            funpot-core:ci)

          cleanup() { docker logs "$cid" || true; docker rm -f "$cid" >/dev/null 2>&1 || true; }
          trap cleanup EXIT

          # ждём readiness
          for i in {1..20}; do
            # если упал — сразу выходим с логами
            if ! docker ps --format '{{.Names}}' | grep -qx funpot-ci-test; then
              echo "Container exited early"; exit 1
            fi
            if docker exec "$cid" sh -c 'wget -qO- http://127.0.0.1:8080/healthz >/dev/null 2>&1'; then
              break
            fi
            sleep 2
          done

          docker exec "$cid" sh -c 'wget -qO- http://127.0.0.1:8080/readyz >/dev/null'
