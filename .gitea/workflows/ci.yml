name: FunPot Core CI

on:
  push:
    branches: ["main", "dev", "feature/**"]
  pull_request:
    branches: ["main", "dev"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: docker.gitea.com/runner-images:ubuntu-latest
      # options удаляем — раннер сам монтирует docker.sock

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: true

      - name: Validate formatting
        run: |
          fmt_out=$(gofmt -l .)
          if [ -n "$fmt_out" ]; then
            echo "The following files need gofmt:" >&2
            echo "$fmt_out" >&2
            exit 1
          fi

      - name: Verify modules
        run: go mod tidy

      - name: Check module diff
        run: |
          if [ -n "$(git status --short go.mod go.sum)" ]; then
            echo "go.mod or go.sum changed after go mod tidy. Run go mod tidy locally." >&2
            git diff -- go.mod go.sum >&2
            exit 1
          fi

      - name: Run go vet
        run: go vet ./...

      - name: Run tests
        run: go test ./...

      - name: Build Docker image
        run: docker build -t funpot-core:ci .

            - name: Smoke test container
        run: |
          set -euo pipefail
          cid=$(docker run -d \
            -e TELEGRAM_BOT_TOKEN='${{ secrets.TELEGRAM_BOT_TOKEN }}' \
            -e FUNPOT_ENV=ci \
            -e PORT=8080 \
            --name funpot-ci-test \
            funpot-core:ci)

          cleanup() { docker logs "$cid" || true; docker rm -f "$cid" >/dev/null 2>&1 || true; }
          trap cleanup EXIT

          # ждём, пока контейнер в состоянии running и порт слушается
          for i in {1..20}; do
            if ! docker ps --format '{{.Names}}' | grep -qx funpot-ci-test; then
              echo "Container exited early"; exit 1
            fi
            if docker exec "$cid" sh -c 'wget -qO- http://127.0.0.1:8080/healthz >/dev/null 2>&1'; then
              break
            fi
            sleep 2
          done

          # финальная проверка готовности
          docker exec "$cid" sh -c 'wget -qO- http://127.0.0.1:8080/readyz >/dev/null'

