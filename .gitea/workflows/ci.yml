name: FunPot Core CI

on:
  push:
    branches: ["main", "dev", "feature/**"]
  pull_request:
    branches: ["main", "dev"]
  workflow_dispatch:

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  # Базовая проверка — всегда
  build:
    outputs:
      image_ref: ${{ steps.publish-image.outputs.image_ref }}
    runs-on: ubuntu-latest
    container:
      image: docker.gitea.com/runner-images:ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: true
      - name: gofmt
        run: |
          out=$(gofmt -l .); if [ -n "$out" ]; then echo "$out" >&2; exit 1; fi
      - name: tidy (no diff)
        run: go mod tidy && git diff --exit-code -- go.mod go.sum
      - name: vet
        run: go vet ./...
      - name: test
        run: go test ./...
      - name: docker build
        run: docker build -t funpot-core:ci .
      - name: Log in to container registry
        if: ${{ github.event_name != 'pull_request' && secrets.REGISTRY_URL != '' && secrets.REGISTRY_USERNAME != '' && secrets.REGISTRY_PASSWORD != '' }}
        shell: bash
        env:
          REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
        run: |
          set -euo pipefail
          echo "$REGISTRY_PASSWORD" | docker login "$REGISTRY_URL" --username "$REGISTRY_USERNAME" --password-stdin
      
      - name: Publish container image
        id: publish-image
        if: ${{ github.event_name != 'pull_request' && secrets.REGISTRY_URL != '' && secrets.REGISTRY_REPOSITORY != '' }}
        shell: bash
        env:
          REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
          REGISTRY_REPOSITORY: ${{ secrets.REGISTRY_REPOSITORY }}
        run: |
          set -euo pipefail
          IMAGE_REF="${REGISTRY_URL}/${REGISTRY_REPOSITORY}:${GITHUB_SHA}"
          docker tag funpot-core:ci "$IMAGE_REF"
          docker push "$IMAGE_REF"
          echo "image_ref=$IMAGE_REF" >>"$GITHUB_OUTPUT"

  # Полный smoke-тест — только для push/ручного запуска из ЭТОГО репо
  smoke:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}   # PR форков пропускаем
    container:
      image: docker.gitea.com/runner-images:ubuntu-latest
    env:
      FUNPOT_ENV: "ci"
      FUNPOT_SERVER_ADDRESS: ":8080"
      FUNPOT_AUTH_TELEGRAM_BOT_TOKEN: ${{ secrets.FUNPOT_AUTH_TELEGRAM_BOT_TOKEN }}
    steps:
      - name: Ensure secret exists
        run: |
          if [ -z "${FUNPOT_AUTH_TELEGRAM_BOT_TOKEN:-}" ]; then
            echo "Secret FUNPOT_AUTH_TELEGRAM_BOT_TOKEN is missing." >&2; exit 1
          fi
      - name: Smoke test container (distroless safe)
        shell: bash
        run: |
          set -euo pipefail
          cid=$(docker run -d \
            -e FUNPOT_ENV="$FUNPOT_ENV" \
            -e FUNPOT_SERVER_ADDRESS="$FUNPOT_SERVER_ADDRESS" \
            -e FUNPOT_AUTH_TELEGRAM_BOT_TOKEN="$FUNPOT_AUTH_TELEGRAM_BOT_TOKEN" \
            --name funpot-ci-test \
            funpot-core:ci)
          cleanup(){ docker logs "$cid" || true; docker rm -f "$cid" >/dev/null 2>&1 || true; }
          trap cleanup EXIT
          for i in {1..20}; do
            docker ps --format '{{.Names}}' | grep -qx funpot-ci-test || { echo "Container exited early"; exit 1; }
            if docker run --rm --network "container:$cid" curlimages/curl:8.9.0 -sf "http://127.0.0.1:8080/healthz" >/dev/null; then break; fi
            sleep 2
          done
          docker run --rm --network "container:$cid" curlimages/curl:8.9.0 -sf "http://127.0.0.1:8080/readyz" >/dev/null
